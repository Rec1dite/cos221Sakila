package za.ac.up.cs.cos221.sekilaclient;

import java.sql.*;
import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.table.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Rec1dite
 */
public class ClientForm extends javax.swing.JFrame {

	/**
	 * Creates new form ClientForm
	 */
	public ClientForm() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                dlgAddFilm = new javax.swing.JDialog();
                txtFilmTitle = new javax.swing.JTextField();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                txtFilmDescription = new javax.swing.JTextArea();
                spnFilmYear = new javax.swing.JSpinner();
                jLabel3 = new javax.swing.JLabel();
                cbxFilmLanguage = new javax.swing.JComboBox<>();
                jLabel4 = new javax.swing.JLabel();
                jLabel5 = new javax.swing.JLabel();
                spnFilmRentalDuration = new javax.swing.JSpinner();
                jLabel6 = new javax.swing.JLabel();
                btnFilmSubmit = new javax.swing.JButton();
                spnFilmLength = new javax.swing.JSpinner();
                jLabel7 = new javax.swing.JLabel();
                spnFilmRentalRate = new javax.swing.JSpinner();
                cbxFilmRating = new javax.swing.JComboBox<>();
                jLabel8 = new javax.swing.JLabel();
                spnFilmReplacementCost = new javax.swing.JSpinner();
                jLabel9 = new javax.swing.JLabel();
                jLabel10 = new javax.swing.JLabel();
                pnlFilmSpecialFeatures = new javax.swing.JPanel();
                cbxFilmSF_Trailers = new javax.swing.JCheckBox();
                cbxFilmSF_Commentaries = new javax.swing.JCheckBox();
                cbxFilmSF_BehindScenes = new javax.swing.JCheckBox();
                cbxFilmSF_DeletedScenes = new javax.swing.JCheckBox();
                dlgEditClient = new javax.swing.JDialog();
                pnlClientDetails = new javax.swing.JPanel();
                txtClientFirstName = new javax.swing.JTextField();
                jLabel12 = new javax.swing.JLabel();
                jLabel13 = new javax.swing.JLabel();
                txtClientSurname = new javax.swing.JTextField();
                jLabel15 = new javax.swing.JLabel();
                txtClientEmail = new javax.swing.JTextField();
                jLabel14 = new javax.swing.JLabel();
                cbxClientStore = new javax.swing.JComboBox<>();
                cbxClientActive = new javax.swing.JCheckBox();
                jLabel23 = new javax.swing.JLabel();
                txtClientPhoneNumber = new javax.swing.JTextField();
                jLabel16 = new javax.swing.JLabel();
                jLabel17 = new javax.swing.JLabel();
                pnlClientAddress = new javax.swing.JPanel();
                txtClientAddress1 = new javax.swing.JTextField();
                jLabel18 = new javax.swing.JLabel();
                jLabel19 = new javax.swing.JLabel();
                txtClientAddress2 = new javax.swing.JTextField();
                jLabel20 = new javax.swing.JLabel();
                txtClientDistrict = new javax.swing.JTextField();
                jLabel21 = new javax.swing.JLabel();
                cbxClientCity = new javax.swing.JComboBox<>();
                txtClientPostalCode = new javax.swing.JTextField();
                jLabel22 = new javax.swing.JLabel();
                btnClientSubmit = new javax.swing.JButton();
                tbpMain = new javax.swing.JTabbedPane();
                pnlStaff = new javax.swing.JPanel();
                btnStaffSearch = new javax.swing.JButton();
                scpStaff = new javax.swing.JScrollPane();
                tblStaff = new javax.swing.JTable();
                txtStaffSearch = new javax.swing.JTextField();
                jLabel24 = new javax.swing.JLabel();
                pnlFilms = new javax.swing.JPanel();
                btnAddFilm = new javax.swing.JButton();
                scpFilms = new javax.swing.JScrollPane();
                tblFilms = new javax.swing.JTable();
                btnAddFilm1 = new javax.swing.JButton();
                jLabel11 = new javax.swing.JLabel();
                pnlInventory = new javax.swing.JPanel();
                scpInventory = new javax.swing.JScrollPane();
                tblInventory = new javax.swing.JTable();
                btnInventoryRefresh = new javax.swing.JButton();
                pnlClients = new javax.swing.JPanel();
                scpClients = new javax.swing.JScrollPane();
                tblClients = new javax.swing.JTable();
                btnAddClient = new javax.swing.JButton();
                btnUpdateClient = new javax.swing.JButton();
                btnDeleteClient = new javax.swing.JButton();
                jLabel25 = new javax.swing.JLabel();

                dlgAddFilm.setTitle("Add Film");
                dlgAddFilm.setMinimumSize(new java.awt.Dimension(300, 600));
                dlgAddFilm.setPreferredSize(new java.awt.Dimension(300, 600));
                dlgAddFilm.setSize(new java.awt.Dimension(300, 600));

                jLabel1.setText("Title:");

                jLabel2.setText("Description:");

                txtFilmDescription.setColumns(20);
                txtFilmDescription.setRows(5);
                jScrollPane1.setViewportView(txtFilmDescription);

                spnFilmYear.setModel(new javax.swing.SpinnerNumberModel(2000, 1900, 2022, 1));

                jLabel3.setText("Released:");

                cbxFilmLanguage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "Italian", "Japanese", "Mandarin", "French", "German" }));
                cbxFilmLanguage.setToolTipText("");

                jLabel4.setText("Language");

                jLabel5.setText("Rental Duration:");

                spnFilmRentalDuration.setModel(new javax.swing.SpinnerNumberModel(3, 1, 14, 1));

                jLabel6.setText("Rental Rate:");

                btnFilmSubmit.setText("Add");
                btnFilmSubmit.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnFilmSubmitActionPerformed(evt);
                        }
                });

                spnFilmLength.setModel(new javax.swing.SpinnerNumberModel(120, 1, null, 1));

                jLabel7.setText("Length (mins):");

                spnFilmRentalRate.setModel(new javax.swing.SpinnerNumberModel(0.99f, 0.01f, null, 0.01f));

                cbxFilmRating.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "G", "PG", "PG-13", "R", "NC-17" }));
                cbxFilmRating.setToolTipText("");

                jLabel8.setText("Rating");

                spnFilmReplacementCost.setModel(new javax.swing.SpinnerNumberModel(19.99f, 0.01f, null, 0.01f));

                jLabel9.setText("Replacement Cost:");

                jLabel10.setText("Special Features:");

                pnlFilmSpecialFeatures.setBorder(javax.swing.BorderFactory.createEtchedBorder());

                cbxFilmSF_Trailers.setText("Trailers");

                cbxFilmSF_Commentaries.setText("Commentaries");

                cbxFilmSF_BehindScenes.setText("Behind the Scenes");

                cbxFilmSF_DeletedScenes.setText("Deleted Scenes");

                javax.swing.GroupLayout pnlFilmSpecialFeaturesLayout = new javax.swing.GroupLayout(pnlFilmSpecialFeatures);
                pnlFilmSpecialFeatures.setLayout(pnlFilmSpecialFeaturesLayout);
                pnlFilmSpecialFeaturesLayout.setHorizontalGroup(
                        pnlFilmSpecialFeaturesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlFilmSpecialFeaturesLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlFilmSpecialFeaturesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbxFilmSF_Trailers)
                                        .addComponent(cbxFilmSF_Commentaries))
                                .addGap(19, 19, 19)
                                .addGroup(pnlFilmSpecialFeaturesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbxFilmSF_BehindScenes)
                                        .addComponent(cbxFilmSF_DeletedScenes))
                                .addContainerGap(39, Short.MAX_VALUE))
                );
                pnlFilmSpecialFeaturesLayout.setVerticalGroup(
                        pnlFilmSpecialFeaturesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlFilmSpecialFeaturesLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlFilmSpecialFeaturesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlFilmSpecialFeaturesLayout.createSequentialGroup()
                                                .addComponent(cbxFilmSF_Trailers)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbxFilmSF_Commentaries))
                                        .addGroup(pnlFilmSpecialFeaturesLayout.createSequentialGroup()
                                                .addComponent(cbxFilmSF_BehindScenes)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbxFilmSF_DeletedScenes)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                javax.swing.GroupLayout dlgAddFilmLayout = new javax.swing.GroupLayout(dlgAddFilm.getContentPane());
                dlgAddFilm.getContentPane().setLayout(dlgAddFilmLayout);
                dlgAddFilmLayout.setHorizontalGroup(
                        dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel5)
                                                                        .addComponent(spnFilmRentalDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(spnFilmRentalRate, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addComponent(jLabel1)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel4)
                                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel3)
                                                                        .addComponent(spnFilmYear, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel7)
                                                                        .addComponent(spnFilmLength, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel8)
                                                                        .addComponent(cbxFilmRating, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(spnFilmReplacementCost, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addComponent(jLabel10))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(pnlFilmSpecialFeatures, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(cbxFilmLanguage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(txtFilmTitle)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgAddFilmLayout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(btnFilmSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addContainerGap())))
                );
                dlgAddFilmLayout.setVerticalGroup(
                        dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFilmTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(spnFilmYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(spnFilmLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxFilmLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                .addGroup(dlgAddFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                                .addComponent(jLabel5)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(spnFilmRentalDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                                .addComponent(jLabel6)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(spnFilmRentalRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbxFilmRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(dlgAddFilmLayout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(spnFilmReplacementCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlFilmSpecialFeatures, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFilmSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(98, Short.MAX_VALUE))
                );

                dlgEditClient.setTitle("Add Client");
                dlgEditClient.setMinimumSize(new java.awt.Dimension(600, 500));
                dlgEditClient.setPreferredSize(new java.awt.Dimension(600, 500));
                dlgEditClient.setSize(new java.awt.Dimension(600, 500));

                pnlClientDetails.setBorder(javax.swing.BorderFactory.createEtchedBorder());

                jLabel12.setText("First Name:");

                jLabel13.setText("Surname:");

                jLabel15.setText("Email:");

                jLabel14.setText("Store:");

                cbxClientStore.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Canada, Lethbridge", "Australia, Woodridge" }));

                cbxClientActive.setSelected(true);
                cbxClientActive.setText("Active");

                jLabel23.setText("Phone Number:");

                javax.swing.GroupLayout pnlClientDetailsLayout = new javax.swing.GroupLayout(pnlClientDetails);
                pnlClientDetails.setLayout(pnlClientDetailsLayout);
                pnlClientDetailsLayout.setHorizontalGroup(
                        pnlClientDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlClientDetailsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlClientDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlClientDetailsLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(cbxClientActive))
                                        .addGroup(pnlClientDetailsLayout.createSequentialGroup()
                                                .addGroup(pnlClientDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(cbxClientStore, javax.swing.GroupLayout.Alignment.TRAILING, 0, 250, Short.MAX_VALUE)
                                                        .addComponent(txtClientEmail)
                                                        .addComponent(txtClientSurname)
                                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtClientFirstName)
                                                        .addComponent(txtClientPhoneNumber)
                                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                );
                pnlClientDetailsLayout.setVerticalGroup(
                        pnlClientDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlClientDetailsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtClientFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtClientSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtClientEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtClientPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxClientStore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxClientActive)
                                .addContainerGap())
                );

                jLabel16.setText("Client Details");

                jLabel17.setText("Client Address");

                pnlClientAddress.setBorder(javax.swing.BorderFactory.createEtchedBorder());

                jLabel18.setText("Address 1:");

                jLabel19.setText("Address 2:");

                jLabel20.setText("District:");

                jLabel21.setText("City:");

                jLabel22.setText("Postal Code:");

                javax.swing.GroupLayout pnlClientAddressLayout = new javax.swing.GroupLayout(pnlClientAddress);
                pnlClientAddress.setLayout(pnlClientAddressLayout);
                pnlClientAddressLayout.setHorizontalGroup(
                        pnlClientAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlClientAddressLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlClientAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtClientAddress1)
                                        .addGroup(pnlClientAddressLayout.createSequentialGroup()
                                                .addGroup(pnlClientAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtClientPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(txtClientAddress2)
                                        .addComponent(txtClientDistrict)
                                        .addComponent(cbxClientCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                );
                pnlClientAddressLayout.setVerticalGroup(
                        pnlClientAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlClientAddressLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtClientAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtClientAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtClientDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxClientCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtClientPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(37, Short.MAX_VALUE))
                );

                btnClientSubmit.setText("Submit");
                btnClientSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                btnClientSubmitMouseClicked(evt);
                        }
                });

                javax.swing.GroupLayout dlgEditClientLayout = new javax.swing.GroupLayout(dlgEditClient.getContentPane());
                dlgEditClient.getContentPane().setLayout(dlgEditClientLayout);
                dlgEditClientLayout.setHorizontalGroup(
                        dlgEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dlgEditClientLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(dlgEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(pnlClientDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(dlgEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(dlgEditClientLayout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addGap(190, 220, Short.MAX_VALUE))
                                        .addComponent(pnlClientAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(6, 6, 6))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgEditClientLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnClientSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );
                dlgEditClientLayout.setVerticalGroup(
                        dlgEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dlgEditClientLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(dlgEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(dlgEditClientLayout.createSequentialGroup()
                                                .addGroup(dlgEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel17)
                                                        .addComponent(jLabel16))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pnlClientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(pnlClientDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClientSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(8, Short.MAX_VALUE))
                );

                setTitle("Sakila Editor");
                setMinimumSize(new java.awt.Dimension(400, 300));
                addWindowListener(new java.awt.event.WindowAdapter() {
                        public void windowOpened(java.awt.event.WindowEvent evt) {
                                formWindowOpened(evt);
                        }
                });

                tbpMain.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                tbpMain.setToolTipText("");

                btnStaffSearch.setText("Search");
                btnStaffSearch.setToolTipText("Search");
                btnStaffSearch.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                btnStaffSearchMouseClicked(evt);
                        }
                });

                tblStaff.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                scpStaff.setViewportView(tblStaff);

                txtStaffSearch.setToolTipText("Enter your search phrase here");

                jLabel24.setText("<html><b>Hint:</b><br />Enter a term into the searchbox<br />and hit <i>Search</i> to filter by<br />name, surname, or address.</html>");

                javax.swing.GroupLayout pnlStaffLayout = new javax.swing.GroupLayout(pnlStaff);
                pnlStaff.setLayout(pnlStaffLayout);
                pnlStaffLayout.setHorizontalGroup(
                        pnlStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStaffLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scpStaff, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtStaffSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(btnStaffSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel24))
                                .addContainerGap())
                );
                pnlStaffLayout.setVerticalGroup(
                        pnlStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlStaffLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlStaffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlStaffLayout.createSequentialGroup()
                                                .addComponent(txtStaffSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnStaffSearch)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(scpStaff, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
                                .addContainerGap())
                );

                tbpMain.addTab("Staff", pnlStaff);

                btnAddFilm.setText("Add Film");
                btnAddFilm.setToolTipText("Add a new film to the database");
                btnAddFilm.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnAddFilmActionPerformed(evt);
                        }
                });

                tblFilms.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                scpFilms.setViewportView(tblFilms);

                btnAddFilm1.setText("Reset");
                btnAddFilm1.setToolTipText("Resets the table view");
                btnAddFilm1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnFilmRefresh(evt);
                        }
                });

                jLabel11.setText("<html><b>Hint:</b><br />Click the column<br />titles to sort by<br />individual columns. </html>");

                javax.swing.GroupLayout pnlFilmsLayout = new javax.swing.GroupLayout(pnlFilms);
                pnlFilms.setLayout(pnlFilmsLayout);
                pnlFilmsLayout.setHorizontalGroup(
                        pnlFilmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFilmsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scpFilms, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlFilmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnAddFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnAddFilm1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11))
                                .addContainerGap())
                );
                pnlFilmsLayout.setVerticalGroup(
                        pnlFilmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlFilmsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlFilmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlFilmsLayout.createSequentialGroup()
                                                .addComponent(btnAddFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnAddFilm1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(scpFilms, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
                                .addContainerGap())
                );

                tbpMain.addTab("Films", pnlFilms);

                tblInventory.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                scpInventory.setViewportView(tblInventory);

                btnInventoryRefresh.setText("Reset");
                btnInventoryRefresh.setToolTipText("Resets the table view");
                btnInventoryRefresh.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnInventoryRefreshActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout pnlInventoryLayout = new javax.swing.GroupLayout(pnlInventory);
                pnlInventory.setLayout(pnlInventoryLayout);
                pnlInventoryLayout.setHorizontalGroup(
                        pnlInventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlInventoryLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scpInventory, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnInventoryRefresh)
                                .addContainerGap())
                );
                pnlInventoryLayout.setVerticalGroup(
                        pnlInventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlInventoryLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlInventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(scpInventory, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                                        .addGroup(pnlInventoryLayout.createSequentialGroup()
                                                .addComponent(btnInventoryRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                );

                tbpMain.addTab("Inventory", pnlInventory);

                tblClients.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tblClients.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                tblClients.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                                tblClientsFocusGained(evt);
                        }
                });
                scpClients.setViewportView(tblClients);

                btnAddClient.setText("Add Client");
                btnAddClient.setToolTipText("Add a new customer to the database");
                btnAddClient.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                btnAddClientMouseClicked(evt);
                        }
                });

                btnUpdateClient.setText("Update Selected");
                btnUpdateClient.setToolTipText("Update an existing customer");
                btnUpdateClient.setEnabled(false);
                btnUpdateClient.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                btnUpdateClientMouseClicked(evt);
                        }
                });

                btnDeleteClient.setText("Delete Selected");
                btnDeleteClient.setToolTipText("Delete all records associated with the selected client");
                btnDeleteClient.setEnabled(false);
                btnDeleteClient.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                btnDeleteClientMouseClicked(evt);
                        }
                });

                jLabel25.setText("<html><b>Hint:</b><br />Select a row in<br />the table to edit<br />its properties or<br />to delete the<br />corresponding client.</html>");

                javax.swing.GroupLayout pnlClientsLayout = new javax.swing.GroupLayout(pnlClients);
                pnlClients.setLayout(pnlClientsLayout);
                pnlClientsLayout.setHorizontalGroup(
                        pnlClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlClientsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scpClients, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnAddClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnUpdateClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnDeleteClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel25))
                                .addContainerGap())
                );
                pnlClientsLayout.setVerticalGroup(
                        pnlClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlClientsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlClientsLayout.createSequentialGroup()
                                                .addComponent(btnAddClient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(46, 46, 46)
                                                .addComponent(btnUpdateClient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(48, 48, 48)
                                                .addComponent(btnDeleteClient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(scpClients, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
                                .addContainerGap())
                );

                tbpMain.addTab("Clients", pnlClients);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tbpMain)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tbpMain)
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
		//Set database connection details
		if(System.getenv("SAKILA_DB_PROTO") != null){dbProto = System.getenv("SAKILA_DB_PROTO");}
		if(System.getenv("SAKILA_DB_HOST") != null){dbHost = System.getenv("SAKILA_DB_HOST");}
		if(System.getenv("SAKILA_DB_PORT") != null){dbPort = System.getenv("SAKILA_DB_PORT");}
		if(System.getenv("SAKILA_DB_NAME") != null){dbName = System.getenv("SAKILA_DB_NAME");}
		if(System.getenv("SAKILA_DB_USERNAME") != null){dbUser = System.getenv("SAKILA_DB_USERNAME");}
		if(System.getenv("SAKILA_DB_PASSWORD") != null){dbPass = System.getenv("SAKILA_DB_PASSWORD");}
		//Initialize tables
		String connErrs = (updateStaff()?"":"\nStaff") + (updateFilms()?"":"\nFilms") + (updateInventory()?"":"\nInventory") + (updateClients()?"":"\nClients");
		if(connErrs.length() != 0)
		{
			JOptionPane.showMessageDialog(null,
				"The following tables failed to load:"+connErrs+"\n\nPlease check your environment variables and database configuration",
				"DB Connection Error",
				JOptionPane.ERROR_MESSAGE
				);
		}
		//Enable sorting by column
		tblStaff.setAutoCreateRowSorter(true);
		tblFilms.setAutoCreateRowSorter(true);
		tblInventory.setAutoCreateRowSorter(true);
		tblClients.setAutoCreateRowSorter(true);
		//Disable cell editing
		tblStaff.setDefaultEditor(Object.class, null);
		tblFilms.setDefaultEditor(Object.class, null);
		tblInventory.setDefaultEditor(Object.class, null);
		tblClients.setDefaultEditor(Object.class, null);

		updateCitiesList();
        }//GEN-LAST:event_formWindowOpened

        private void btnStaffSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStaffSearchMouseClicked
		String search = txtStaffSearch.getText();
		updateStaff(search);
        }//GEN-LAST:event_btnStaffSearchMouseClicked

        private void btnAddFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFilmActionPerformed
		dlgAddFilm.setVisible(true);
        }//GEN-LAST:event_btnAddFilmActionPerformed

	//Called when adding new film
        private void btnFilmSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilmSubmitActionPerformed
		//Add data to table
//	boolean addFilm(String title, String desc, int released, int language, int rentDur, float rentRate, int length, float repCost, String rating, String specFeatures) {
		String title = txtFilmTitle.getText();
		String desc = txtFilmDescription.getText();
		int rel = (int)spnFilmYear.getValue();
		int lang = cbxFilmLanguage.getSelectedIndex() + 1;
		int rentDur = (int)spnFilmRentalDuration.getValue();
		float rentRate = (float)spnFilmRentalRate.getValue();
		int len = (int)spnFilmLength.getValue();
		float repCost = (float)spnFilmReplacementCost.getValue();
		String rating = cbxFilmRating.getItemAt(cbxFilmRating.getSelectedIndex());

		StringJoiner joiner = new StringJoiner(",");
		if(cbxFilmSF_Trailers.isSelected()){joiner.add("Trailers");}
		if(cbxFilmSF_Commentaries.isSelected()){joiner.add("Commentaries");}
		if(cbxFilmSF_DeletedScenes.isSelected()){joiner.add("Deleted Scenes");}
		if(cbxFilmSF_BehindScenes.isSelected()){joiner.add("Behind the Scenes");}
		String specFeat = joiner.toString();

		addFilm(title, desc, rel, lang, rentDur, rentRate, len, repCost, rating, specFeat);

		//Clear all inputs
		txtFilmTitle.setText("");
		txtFilmDescription.setText("");
		spnFilmYear.setValue(2000);
		cbxFilmLanguage.setSelectedIndex(0);
		spnFilmRentalDuration.setValue(3);
		spnFilmRentalRate.setValue(0.99);
		spnFilmLength.setValue(120);
		spnFilmReplacementCost.setValue(19.99);
		cbxFilmRating.setSelectedIndex(0);
		cbxFilmSF_Trailers.setSelected(false);
		cbxFilmSF_Commentaries.setSelected(false);
		cbxFilmSF_DeletedScenes.setSelected(false);
		cbxFilmSF_BehindScenes.setSelected(false);

		//Refresh table
		updateFilms();

		//Close dialog
		dlgAddFilm.setVisible(false);
        }//GEN-LAST:event_btnFilmSubmitActionPerformed

        private void btnFilmRefresh(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilmRefresh
		updateFilms();
        }//GEN-LAST:event_btnFilmRefresh

        private void btnInventoryRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryRefreshActionPerformed
		updateInventory();
        }//GEN-LAST:event_btnInventoryRefreshActionPerformed

        private void tblClientsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblClientsFocusGained
		btnUpdateClient.setEnabled(true);
		btnDeleteClient.setEnabled(true);
        }//GEN-LAST:event_tblClientsFocusGained

        private void btnClientSubmitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClientSubmitMouseClicked
		String fName = txtClientFirstName.getText();
		String surname = txtClientSurname.getText();
		String email = txtClientEmail.getText();
		String phone = txtClientPhoneNumber.getText();
		int storeId = cbxClientStore.getSelectedIndex() + 1;
		boolean active = cbxClientActive.isSelected();
		String address = txtClientAddress1.getText();
		String address2 = txtClientAddress2.getText();
		String district = txtClientDistrict.getText();
		int cityId = cbxClientCity.getSelectedIndex() + 1;
		String postalCode = txtClientPostalCode.getText();
		if(clientEditingId < 0)
		{
			//Add new client
			addClient(fName, surname, email, phone, storeId, active, address, address2, district, cityId, postalCode);
		}
		else
		{
			//Edit existing client
			updateClient(clientEditingId, fName, surname, email, phone, storeId, active, address, address2, district, cityId, postalCode);
		}
		clearEditClientDialog();
		dlgEditClient.setVisible(false);
		updateClients();
        }//GEN-LAST:event_btnClientSubmitMouseClicked

	int clientEditingId = -1;
        private void btnAddClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddClientMouseClicked
		dlgEditClient.setVisible(true);
		clearEditClientDialog();
		dlgEditClient.setTitle("Add Client");
		clientEditingId = -1;
        }//GEN-LAST:event_btnAddClientMouseClicked

        private void btnUpdateClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateClientMouseClicked
		int selR = tblClients.getSelectedRow();
		if(selR != -1)
		{
			clientEditingId = (int)tblClients.getValueAt(selR, 0);
			editClientDialogSetup(clientEditingId);
			dlgEditClient.setVisible(true);
			dlgEditClient.setTitle("Update Client");
		}
		else
		{
			//No row selected, disable buttons
			btnUpdateClient.setEnabled(false);
			btnDeleteClient.setEnabled(false);
		}
        }//GEN-LAST:event_btnUpdateClientMouseClicked

        private void btnDeleteClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteClientMouseClicked
		int selR = tblClients.getSelectedRow();
		if(selR != -1)
		{
			clientEditingId = (int)tblClients.getValueAt(selR, 0);
			String name = (String)tblClients.getValueAt(selR, 2) + " " + (String)tblClients.getValueAt(selR, 3);

			int dlgConfirmDelete = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete client " + name + "?", "Delete Confirmation", JOptionPane.YES_NO_OPTION);
			if(dlgConfirmDelete == JOptionPane.YES_OPTION)
			{
				deleteClient(clientEditingId);
				btnUpdateClient.setEnabled(false);
				btnDeleteClient.setEnabled(false);
				updateClients();
			}
		}
		else
		{
			btnUpdateClient.setEnabled(false);
			btnDeleteClient.setEnabled(false);
		}
        }//GEN-LAST:event_btnDeleteClientMouseClicked
	void clearEditClientDialog()
	{
		txtClientFirstName.setText("");
		txtClientSurname.setText("");
		txtClientEmail.setText("");
		txtClientPhoneNumber.setText("");
		cbxClientStore.setSelectedIndex(0);
		cbxClientActive.setSelected(true);

		txtClientAddress1.setText("");
		txtClientAddress2.setText("");
		txtClientDistrict.setText("");
		cbxClientCity.setSelectedIndex(0);
		txtClientPostalCode.setText("");
	}
	boolean editClientDialogSetup(int clientId)
	{
		try
		{
			Connection conn = getDBConnection();
			if(conn == null) { return false; }
			String q = "SELECT first_name, last_name, email, phone, store_id, active, address, address2, district, city_id, postal_code " +
			"FROM customer, address " +
			"WHERE customer.address_id = address.address_id AND customer_id = ?";
			PreparedStatement s = conn.prepareStatement(q);
			s.setInt(1, clientId);

			try(ResultSet res = s.executeQuery())
			{
				res.next();
				txtClientFirstName.setText((String)res.getObject(1));
				txtClientSurname.setText  ((String)res.getObject(2));
				txtClientEmail.setText    ((String)res.getObject(3));
				txtClientPhoneNumber.setText((String)res.getObject(4));
				cbxClientStore.setSelectedIndex(((Short)res.getObject(5)).intValue()-1);
				cbxClientActive.setSelected(((Byte)res.getObject(6))==0?false:true);

				txtClientAddress1.setText((String)res.getObject(7));
				txtClientAddress2.setText((String)res.getObject(8));
				txtClientDistrict.setText((String)res.getObject(9));
				cbxClientCity.setSelectedIndex((int)res.getObject(10)-1);
				txtClientPostalCode.setText((String)res.getObject(11));

				res.close();
			} catch(Exception e) {System.out.println(e.getLocalizedMessage());return false;}
			s.close();
			conn.close();
			return true;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return false;
	}
	boolean addClient(String fName, String surname, String email, String phone, int storeId, boolean active, String address, String address2, String district, int cityId, String pc) {
		try
		{
			Connection conn = getDBConnection();
			if(conn == null) { return false; }

			int addrId = addAddress(address, address2, district, cityId, pc, phone);

			if(addrId == -1)
			{
				JOptionPane.showMessageDialog(null,
					"Address data was not formatted correctly. Please try again.",
					"Data Insertion Error",
					JOptionPane.ERROR_MESSAGE
					);
			}

			//Insert new client
			PreparedStatement s = conn.prepareStatement(
				"INSERT INTO customer (`store_id`, `first_name`, `last_name`, `email`, `address_id`, `active`) " +
				"VALUES (?, ?, ?, ?, ?, ?)");
			s.setInt(1, storeId);
			s.setString(2, fName);
			s.setString(3, surname);
			s.setString(4, email);
			s.setInt(5, addrId);
			s.setInt(6, (active?1:0));

			int res = s.executeUpdate();
			String msg = "User " + fName + " " + surname + " successfully added.";
			JOptionPane.showMessageDialog(null, msg, "Success", JOptionPane.DEFAULT_OPTION);
			s.close();
			conn.close();

			return true;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return false;
	}
	boolean updateCitiesList() {
		try
		{
			Connection conn = getDBConnection();
			if(conn == null) { return false; }
			Statement s = conn.createStatement();

			try(ResultSet res = s.executeQuery("SELECT CONCAT(country, ', ', city) AS `cityName` FROM city, country WHERE city.country_id = country.country_id ORDER BY city_id"))
			{
				Vector<String> cities = new Vector<String>();
				while(res.next())
				{
					cities.add((String)res.getObject(1));
				}
				DefaultComboBoxModel<String> m = new DefaultComboBoxModel<>(cities);
				cbxClientCity.setModel(m);
				res.close();
			}
			s.close();
			conn.close();
			return true;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return false;
	}
	//Adds a new address and returns it's address_id
	int addAddress(String address, String address2, String district, int cityId, String pc, String phone) {
		try
		{
			Connection conn = getDBConnection();
			if(conn == null) { return -1; }

			//Add new address
			PreparedStatement a = conn.prepareStatement("INSERT INTO address (address, address2, district, city_id, postal_code, phone) " +
								    "VALUES (?, ?, ?, ?, ?, ?)", Statement.RETURN_GENERATED_KEYS);
			a.setString(1, address);
			a.setString(2, address2);
			a.setString(3, district);
			a.setInt(4, cityId);
			a.setString(5, pc);
			a.setString(6, phone);
			
			int resA = a.executeUpdate();

			//Get inserted address_id
			ResultSet gk = a.getGeneratedKeys();
			int addrId = -1;
			if(gk.next())
			{
				addrId = gk.getInt(1);
			}
			a.close();
			return addrId;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return -1;
	}
	boolean deleteClient(int id) {
		try
		{
			Connection conn = getDBConnection();
			if(conn == null) { return false; }

			String[] qs = new String[]
			{
				//Welcome to the danger zone
				"DELETE FROM payment WHERE customer_id = ?",
				"DELETE FROM rental WHERE customer_id = ?",
				"DELETE FROM customer WHERE customer_id = ?",
				"DELETE a FROM address a JOIN customer c ON c.address_id = a.address_id AND customer_id = ?"
			};
			for(int i = 0; i < qs.length; i++)
			{
				PreparedStatement s = conn.prepareStatement(qs[i]);
				s.setInt(1, id);
				s.executeUpdate();
				s.close();
			}

			conn.close();
			return true;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return false;
	}
	boolean updateClient(int id, String fName, String surname, String email, String phone, int storeId, boolean active, String address,
	String address2, String district, int cityId, String pc) {
		try
		{
			Connection conn = getDBConnection();
			if(conn == null) { return false; }

			int addrId = addAddress(address, address2, district, cityId, pc, phone);

			if(addrId == -1)
			{
				JOptionPane.showMessageDialog(null,
					"Address data was not formatted correctly. Please try again.",
					"Data Update Error",
					JOptionPane.ERROR_MESSAGE
					);
			}

			//Update client
			PreparedStatement s = conn.prepareStatement(
				"UPDATE customer SET `store_id` = ?, `first_name` = ?, `last_name` = ?, `email` = ?, `address_id` = ?, `active` = ? " +
				"WHERE customer_id = ?");

			s.setInt(1, storeId);
			s.setString(2, fName);
			s.setString(3, surname);
			s.setString(4, email);
			s.setInt(5, addrId);
			s.setInt(6, (active?1:0));
			s.setInt(7, id);

			int res = s.executeUpdate();
			String msg = "User " + fName + " " + surname + " successfully updated.";
			JOptionPane.showMessageDialog(null, msg, "Success", JOptionPane.DEFAULT_OPTION);
			s.close();
			conn.close();

			return true;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return false;
	}

	boolean populateTable(JTable tbl, ResultSet res){return populateTable(tbl, res, 2000);}
	boolean populateTable(JTable tbl, ResultSet res, int maxRows)
	{
		try
		{
			DefaultTableModel model = (DefaultTableModel)tbl.getModel();
			
			//Clear table
			model.setRowCount(0);
			model.setColumnCount(0);

			//Populate table
			ResultSetMetaData md = res.getMetaData();

			int cols = md.getColumnCount();
			Vector<String> colNames = new Vector<String>();
			for(int c = 1; c <= cols; c++)
			{
				model.addColumn(md.getColumnLabel(c));
			}

			int counter = 0;
			while(res.next() && counter < maxRows)
			{
				Object[] r = new Object[cols];
				for(int c = 0; c < cols; c++)
				{
					r[c] = res.getObject(c+1);
				}
				model.addRow(r);
				counter++;
			}

		} catch(SQLException e) {System.out.println(e.toString());return false;}
		return true;

	}
	boolean updateStaff() {return updateStaff("");}
	boolean updateStaff(String search) {
		try
		{
			search = search.trim();
			Connection conn = getDBConnection();
			if(conn == null) { return false; }
			String q = "SELECT first_name AS 'First Name', last_name AS 'Surname', address AS 'Address', address2 AS 'Address 2', " +
					 "address.district AS 'District', city AS 'City', postal_code AS 'PO Box', phone AS `Tel`, d.storeLoc AS `Store`, " +
					 "IF(active=1,'Yes','No') AS 'Active' " +
					 "FROM staff, address, city, " +
					 "(select store_id, CONCAT(country, ', ', city) AS storeLoc from store, address, city, country " +
					 "WHERE store.address_id = address.address_id AND address.city_id = city.city_id AND city.country_id = country.country_id) d " +

					 "WHERE staff.address_id = address.address_id AND address.city_id = city.city_id AND staff.store_id = d.store_id " +
					 "AND CONCAT(first_name, ' ', last_name, ' ', address) LIKE CONCAT('%', ?, '%')";

			PreparedStatement s = conn.prepareStatement(q);
			s.setString(1, search);

			try(ResultSet res = s.executeQuery())
			{
				populateTable(tblStaff, res);
				res.close();
			}
			s.close();
			conn.close();
			return true;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return false;
	}
	boolean updateFilms() {
		try
		{
			Connection conn = getDBConnection();
			if(conn == null) { return false; }
			Statement s = conn.createStatement();

			try(ResultSet res = s.executeQuery("SELECT title AS Title, description AS Description, CAST(release_year AS INT) AS Year, rating AS Rating, language.name AS Language " +
				"FROM film, language WHERE film.language_id = language.language_id"))
			{
				populateTable(tblFilms, res);
				res.close();
			}
			s.close();
			conn.close();
			return true;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return false;
	}
	boolean addFilm(String title, String desc, int released, int language, int rentDur, float rentRate, int length, float repCost, String rating, String specFeatures) {
		try
		{
			Connection conn = getDBConnection();
			if(conn == null) { return false; }
			PreparedStatement s = conn.prepareStatement(
				"INSERT INTO film (`title`, `description`, `release_year`, `language_id`, `rental_duration`, " +
				"`rental_rate`, `length`, `replacement_cost`, `rating`, `special_features`) " +
				"VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
			s.setString(1, title);
			s.setString(2, desc);
			s.setInt(3, released);
			s.setInt(4, language);
			s.setInt(5, rentDur);
			s.setFloat(6, rentRate);
			s.setInt(7, length);
			s.setFloat(8, repCost);
			s.setString(9, rating);
			s.setString(10, specFeatures);

			int res = s.executeUpdate();
			String msg = "Film " + title + " successfully added.";
			JOptionPane.showMessageDialog(null, msg, "Success", JOptionPane.DEFAULT_OPTION);
			s.close();
			conn.close();

			return true;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return false;
	}
	boolean updateInventory() {
		try
		{
			Connection conn = getDBConnection();
			if(conn == null) { return false; }
			Statement s = conn.createStatement();

			final String q = "SELECT storeLoc AS `Store`, name AS `Genre`, COUNT(f.film_id) AS `No. of Films` " +
					 "FROM category c, film_category fc, film f, inventory i, " +
					 "(select store_id, CONCAT(country, ', ', city) AS storeLoc from store, address, city, country " +
					 "WHERE store.address_id = address.address_id AND address.city_id = city.city_id AND city.country_id = country.country_id) d " +
					 "WHERE c.category_id = fc.category_id AND fc.film_id = f.film_id AND i.film_id = f.film_id AND i.store_id = d.store_id GROUP BY i.store_id, name";

			try(ResultSet res = s.executeQuery(q))
			{
				populateTable(tblInventory, res);
				res.close();
			}
			s.close();
			conn.close();
			return true;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return false;
	}
	boolean updateClients() {
		try
		{
			Connection conn = getDBConnection();
			if(conn == null) { return false; }
			Statement s = conn.createStatement();

			final String q = "SELECT customer_id, storeLoc AS `Store`, first_name AS `First Name`, last_name AS `Surname`, email AS `Email`" +
					 "FROM customer, " +
					 "(select store_id, CONCAT(country, ', ', city) AS storeLoc from store, address, city, country " +
					 "WHERE store.address_id = address.address_id AND address.city_id = city.city_id AND city.country_id = country.country_id) d " +
					 "WHERE customer.store_id = d.store_id";

			try(ResultSet res = s.executeQuery(q))
			{
				if(populateTable(tblClients, res))
				{
					//Hide customer_id column
					tblClients.getColumnModel().getColumn(0).setMinWidth(0);
					tblClients.getColumnModel().getColumn(0).setMaxWidth(0);
				}
				res.close();
			}
			s.close();
			conn.close();
			return true;
		}
		catch(SQLException e) {System.out.println(e.toString());}
		return false;
	}
	static String dbProto = "jdbc:mariadb";
	static String dbHost = "localhost";
	static String dbPort = "3306";
	static String dbName = "u21630276_sakila";
	static String dbUser = "root";
	static String dbPass = "passw0rd";
	Connection getDBConnection()
	{
//		String url = "jdbc:mariadb://localhost:3306/u21630276_sakila";
		String url = dbProto + "://" + dbHost + ":" + dbPort + "/" + dbName;
		Connection conn = null;
		try 
		{
			conn = DriverManager.getConnection(url, dbUser, dbPass);
		}
		catch (SQLException e) { System.out.println(e.toString()); }
		return conn;
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		System.gc();
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ClientForm().setVisible(true);
			}
		});

	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnAddClient;
        private javax.swing.JButton btnAddFilm;
        private javax.swing.JButton btnAddFilm1;
        private javax.swing.JButton btnClientSubmit;
        private javax.swing.JButton btnDeleteClient;
        private javax.swing.JButton btnFilmSubmit;
        private javax.swing.JButton btnInventoryRefresh;
        private javax.swing.JButton btnStaffSearch;
        private javax.swing.JButton btnUpdateClient;
        private javax.swing.JCheckBox cbxClientActive;
        private javax.swing.JComboBox<String> cbxClientCity;
        private javax.swing.JComboBox<String> cbxClientStore;
        private javax.swing.JComboBox<String> cbxFilmLanguage;
        private javax.swing.JComboBox<String> cbxFilmRating;
        private javax.swing.JCheckBox cbxFilmSF_BehindScenes;
        private javax.swing.JCheckBox cbxFilmSF_Commentaries;
        private javax.swing.JCheckBox cbxFilmSF_DeletedScenes;
        private javax.swing.JCheckBox cbxFilmSF_Trailers;
        private javax.swing.JDialog dlgAddFilm;
        private javax.swing.JDialog dlgEditClient;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel10;
        private javax.swing.JLabel jLabel11;
        private javax.swing.JLabel jLabel12;
        private javax.swing.JLabel jLabel13;
        private javax.swing.JLabel jLabel14;
        private javax.swing.JLabel jLabel15;
        private javax.swing.JLabel jLabel16;
        private javax.swing.JLabel jLabel17;
        private javax.swing.JLabel jLabel18;
        private javax.swing.JLabel jLabel19;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel20;
        private javax.swing.JLabel jLabel21;
        private javax.swing.JLabel jLabel22;
        private javax.swing.JLabel jLabel23;
        private javax.swing.JLabel jLabel24;
        private javax.swing.JLabel jLabel25;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JLabel jLabel7;
        private javax.swing.JLabel jLabel8;
        private javax.swing.JLabel jLabel9;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JPanel pnlClientAddress;
        private javax.swing.JPanel pnlClientDetails;
        private javax.swing.JPanel pnlClients;
        private javax.swing.JPanel pnlFilmSpecialFeatures;
        private javax.swing.JPanel pnlFilms;
        private javax.swing.JPanel pnlInventory;
        private javax.swing.JPanel pnlStaff;
        private javax.swing.JScrollPane scpClients;
        private javax.swing.JScrollPane scpFilms;
        private javax.swing.JScrollPane scpInventory;
        private javax.swing.JScrollPane scpStaff;
        private javax.swing.JSpinner spnFilmLength;
        private javax.swing.JSpinner spnFilmRentalDuration;
        private javax.swing.JSpinner spnFilmRentalRate;
        private javax.swing.JSpinner spnFilmReplacementCost;
        private javax.swing.JSpinner spnFilmYear;
        private javax.swing.JTable tblClients;
        private javax.swing.JTable tblFilms;
        private javax.swing.JTable tblInventory;
        private javax.swing.JTable tblStaff;
        private javax.swing.JTabbedPane tbpMain;
        private javax.swing.JTextField txtClientAddress1;
        private javax.swing.JTextField txtClientAddress2;
        private javax.swing.JTextField txtClientDistrict;
        private javax.swing.JTextField txtClientEmail;
        private javax.swing.JTextField txtClientFirstName;
        private javax.swing.JTextField txtClientPhoneNumber;
        private javax.swing.JTextField txtClientPostalCode;
        private javax.swing.JTextField txtClientSurname;
        private javax.swing.JTextArea txtFilmDescription;
        private javax.swing.JTextField txtFilmTitle;
        private javax.swing.JTextField txtStaffSearch;
        // End of variables declaration//GEN-END:variables
}